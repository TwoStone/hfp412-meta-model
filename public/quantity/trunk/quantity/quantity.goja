model quantity {
/*-------------------------------------------------------------------------
	FASSADEN
-------------------------------------------------------------------------*/


	server Server {

		derived QuantityManager quantityManager;
		derived UnitTypeManager unitTypeManager;
		derived ConversionManager conversionManager;
		derived FractionManager fractionManager;

		void createUnitType(String name);
	}

/*-------------------------------------------------------------------------
	MANAGER KLASSEN
-------------------------------------------------------------------------*/

	singleton UnitTypeManager {
		AbsUnitType ** unitTypes;
		AbsUnit ** units;

		/* Operationen für Typebene */
		active void createUnitType(String name) throws DoubleDefinitionException;
		active void addDefaultUnit(AbsUnitType type, AbsUnit unit);

		/* Operationen für Exemplarebene */
		active void createUnit(UnitType type, String name) throws DoubleDefinitionException;
		//TODO: CompoundUnitType erstellen!
	}

	singleton QuantityManager {
		AbsQuantity ** quantities;
		active void createQuantity(Unit unit, Fraction amount);
	}

	singleton ConversionManager {
		Conversion ** conversions;
		active void createConversion(Unit unit, Fraction factor, Fraction constant);
	}

	/*Jeder Bruch nur einmal vorhanden*/
	singleton FractionManager {
	//	Fraction ** fractions;
	}

/*-------------------------------------------------------------------------
	MODELL KLASSEN
-------------------------------------------------------------------------*/
	abstract class AbsQuantity {
	
		AbsQuantity add(AbsQuantity summand);
		AbsQuantity sub(AbsQuantity minuend);
		AbsQuantity mul(AbsQuantity factor);
		AbsQuantity div(AbsQuantity divisor);
	}

	class Quantity extends AbsQuantity {
		Fraction amount;
		Unit unit;
	}

	class CompoundQuantity extends AbsQuantity {
		Quantity ** parts; // +
	}

	abstract class AbsUnit {
		prior AbsUnitType type; // 1
		indexed prior String name;
	}

	class CompUnit extends AbsUnit {
		Reference ** refs;
	}
	class Unit extends AbsUnit {	}

	abstract class AbsUnitType {
		AbsUnit defaultUnit; // 0..1
		indexed prior String name;
	}

	class CompUnitType extends AbsUnitType {
		ReferenceType ** refs;	
	}

	class UnitType extends AbsUnitType {}

	class ReferenceType {
		Integer exponent;
		UnitType ref;
	}
	class Reference {
		ReferenceType type;
		Integer exponent;
		Unit ref;
	}
	
	class Conversion {
		// from und to sind Oracle-Schlüsselwörter.
		prior one-to-one (myConversion) Unit source;
		prior UnitType type;
		Fraction factor;
		Fraction constant;
		//Wie muss eine Function aussehen? --> y=a*x+b	
		Quantity convert(Fraction amount);
		Quantity convertInverse(Fraction amount);
	}


/*-------------------------------------------------------------------------
	EXCEPTIONS
-------------------------------------------------------------------------*/
	exception DoubleDefinitionException{}
}
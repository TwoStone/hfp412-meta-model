{
		final PersistentMNonEmptyDisjunctiveNormalForm result = MNonEmptyDisjunctiveNormalForm
				.createMNonEmptyDisjunctiveNormalForm(true);
		getThis().getAddends().applyToAll(new Procdure<PersistentMAtomicTypeConjunction>() {

			@Override
			public void doItTo(PersistentMAtomicTypeConjunction argument) throws PersistenceException {
				final PersistentMAtomicTypeConjunction firstFactor = argument;
				other.getAddends().applyToAll(new Procdure<PersistentMAtomicTypeConjunction>() {

					@Override
					public void doItTo(PersistentMAtomicTypeConjunction argument) throws PersistenceException {
						MNonEmptyDisjunctiveNormalForm.addAddendNormalize(result,
								firstFactor.transientMultiply(argument));
					}
				});

			}
		});
		return result;

	}
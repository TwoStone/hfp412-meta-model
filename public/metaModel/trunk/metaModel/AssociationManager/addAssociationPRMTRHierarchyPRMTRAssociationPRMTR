{

		// Pruefen ob durch bestehende Links ein Zyklus entstehen wuerde
		LinkSearchList allLinksOfAssociation = a.inverseGetType();

		PersistentLink firstCycle = allLinksOfAssociation.findFirst(new Predcate<PersistentLink>() {

			@Override
			public boolean test(PersistentLink argument) throws PersistenceException {
				return argument.getTarget().containsInHierarchy(argument.getSource(), h).toBoolean();
			}
		});
		if (firstCycle != null) {
			throw new CycleException(
					"Es entstuende ein Zyklus, hinzufuegen der Assoziation zu dieser Hierarchy. Erster Zyklus durch: "
							+ firstCycle.toString());
		}

		a.getHierarchies().add(h);
	}
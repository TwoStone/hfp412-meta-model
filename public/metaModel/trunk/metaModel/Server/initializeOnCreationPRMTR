{
		/*
		 * try { final String weightUnitTypeText = "Gewicht"; final String kilogramText = "kg";
		 * 
		 * getThis().getUnitTypeManager().createUnitType(weightUnitTypeText);
		 * getThis().getUnitTypeManager().createUnitType("WÃ¤hrung");
		 * getThis().getUnitTypeManager().createUnitType("Strecke");
		 * getThis().getUnitTypeManager().createUnitType("Zeit");
		 * 
		 * PersistentAbsUnitType weight = UnitType.getAbsUnitTypeByName(weightUnitTypeText).iterator().next();
		 * getThis().getUnitTypeManager().createUnit(kilogramText, (PersistentUnitType) weight);
		 * 
		 * PersistentAbsUnit kilogram = Unit.getAbsUnitByName(kilogramText).iterator().next();
		 * getThis().getQuantityManager().createQuantity(kilogram, Fraction.parse("10/1"));
		 * getThis().getQuantityManager().createQuantity(kilogram, Fraction.parse("2/1"));
		 * 
		 * } catch (DoubleDefinitionException e1) { System.err.println("Fehler bei der Initialisierung des Servers!"); }
		 * 
		 * try { PersistentMAspect aspect1 = getThis().getAspectManager().createAspect("Aspekt1"); PersistentMAtomicType
		 * a = getThis().getTypeManager().createAtomicRootType(aspect1, "A", MFalse.getTheMFalse(),
		 * MFalse.getTheMFalse()); PersistentMAtomicType b = getThis().getTypeManager().createAtomicRootType(aspect1,
		 * "B", MFalse.getTheMFalse(), MFalse.getTheMFalse());
		 * 
		 * PersistentMAtomicType c = getThis().getTypeManager().createAtomicSubType(a, "C", MFalse.getTheMFalse(),
		 * MFalse.getTheMFalse()); PersistentMAspect aspect2 = getThis().getAspectManager().createAspect("Aspekt2");
		 * 
		 * PersistentMAspect genderAspect = getThis().getAspectManager().createAspect("Geschlecht");
		 * 
		 * getThis().getTypeManager().createAtomicRootType(genderAspect, "maennlich", MTrue.getTheMTrue(),
		 * MFalse.getTheMFalse()); getThis().getTypeManager().createAtomicRootType(genderAspect, "weiblich",
		 * MTrue.getTheMTrue(), MFalse.getTheMFalse());
		 * 
		 * MTypeSearchList addends = new MTypeSearchList(); addends.add(a); addends.add(b);
		 * 
		 * getThis().getTypeManager().createTypeDisjunction(addends); // TODO TEST Das sollte jetzt eigentlich nicht
		 * gehen! // TODO getThis().getTypeManager().createProductType(addends);
		 * 
		 * } catch (ConsistencyException e) { System.err.println("Fehler bei der Initialisierung des Servers!"); }
		 */

	}